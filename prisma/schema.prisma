// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comment {
  id         Int    @id @default(autoincrement())
  doctorName String @db.VarChar(255)

  // createdBy        String    @db.VarChar(50)
  // createdDate      DateTime  @db.DateTime(6)
  // lastModifiedBy   String?   @db.VarChar(50)
  // lastModifiedDate DateTime? @db.DateTime(6)
  comment String @db.Text

  status    Status   @default(OPEN)
  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  createdAt DateTime @default(now())
  patientId Int // Add this line to ensure the type of patientId matches the type of id in the Patient model
  updatedAt DateTime @updatedAt

  @@index([patientId])
}

enum Status {
  OPEN
  TREATMENT_IN_PROGRESS
  CLOSED
}

model Patient {
  id           Int           @id @default(autoincrement())
  firstName    String        @db.VarChar(255)
  lastName     String        @db.VarChar(255)
  email        String        @unique @db.VarChar(255)
  gender       String        @db.VarChar(255)
  age          Int           @db.Int
  mobileNumber String        @db.VarChar(20)
  remarks      String?       @db.Text
  status       PatientStatus @default(JOINED)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  // createdBy    String        @db.VarChar(50)
  // updatedBy    String?       @db.VarChar(50)
  comments     Comment[]
  vitals       Vitals[]
}

enum PatientStatus {
  JOINED
  CRITICAL
  NON_CRITICAL
  TREATMENT_IN_PROGRESS
  CLOSED
}

model Vitals {
  id                     Int                  @id @default(autoincrement())
  patient                Patient              @relation(fields: [patientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  patientId              Int
  createdAt              DateTime             @default(now())
  LoC                    LevelOfConsciousness @default(VERBAL)
  airwayStatus           AirwayStatus         @default(OPEN)
  breathingRate             Int                  @db.Int
  breathingStatus        BreathingStatus      @default(NORMAL)
  pulseRate                 Int                  @db.Int
  pulseRateQuality           PulseQuality         @default(REGULAR)
  systolicBloodPressure  Int                  @db.Int
  diastolicBloodPressure Int                  @db.Int
  spo2                   Float                @db.Float
  temperature            Float                @db.Float
}

enum LevelOfConsciousness {
  ALERT
  VERBAL
  PAIN
  UNRESPONSIVE
}

enum AirwayStatus {
  OPEN
  PARTIALLY_BLOCKED
  COMPLETELY_BLOCKED
}

enum BreathingStatus {
  NORMAL
  SHALLOW
  LABORED
  ABSENT
}

enum PulseQuality {
  REGULAR
  IRREGULAR
  ABSENT
}

model Comorbidities{
  id Int @id @default(autoincrement())
  cName String @db.VarChar(255)
  description String @db.Text
  createdAt DateTime @default(now())

}

model Disabilities{
  id Int @id @default(autoincrement())
  disabilityName String @db.VarChar(255)
  description String @db.Text
  createdAt DateTime @default(now())

}

